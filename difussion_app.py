# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Rj1VH4vL-GMLF2JaMWM-ZaFAPtimjqAm
"""


import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

# Configuración de la página
st.set_page_config(page_title="Simulación de Difusión", layout="centered")

st.title("🧬 Simulación de Difusión de un Fármaco en Tejido Biológico")

st.sidebar.header("🔧 Parámetros del modelo")

# Parámetros ajustables
L = st.sidebar.slider("Longitud del tejido (mm)", min_value=1.0, max_value=20.0, value=10.0) / 1000  # convertir a metros
D = st.sidebar.number_input("Coeficiente de difusión (m²/s)", min_value=1e-11, max_value=1e-7, value=1e-9, format="%.1e")
C0 = st.sidebar.slider("Concentración inicial en la superficie (mol/m³)", 0.1, 5.0, 1.0)
Nx = 100  # resolución espacial fija
time_points = [1, 10, 60, 300, 600]  # segundos

if st.button("💥 Ejecutar simulación"):
    # Paso espacial y temporal
    dx = L / (Nx - 1)
    dt = 0.5 * dx**2 / D
    Nt = int(time_points[-1] / dt) + 1

    x = np.linspace(0, L, Nx)
    C = np.zeros(Nx)
    C_new = np.zeros(Nx)
    C[0] = C0
    current_time = 0
    save_idx = 0
    results = []

    for n in range(Nt):
        for i in range(1, Nx - 1):
            C_new[i] = C[i] + D * dt / dx**2 * (C[i + 1] - 2 * C[i] + C[i - 1])
        C_new[0] = C0
        C_new[-1] = C_new[-2]  # flujo cero
        C = C_new.copy()
        current_time += dt

        if save_idx < len(time_points) and current_time >= time_points[save_idx]:
            results.append(C.copy())
            save_idx += 1

    # Gráfica
    fig, ax = plt.subplots(figsize=(8, 5))
    for i, C_t in enumerate(results):
        ax.plot(x * 1000, C_t, label=f"t = {time_points[i]} s")

    ax.set_xlabel("Profundidad en el tejido [mm]")
    ax.set_ylabel("Concentración [mol/m³]")
    ax.set_title("Difusión de Fármaco en Tejido Biológico")
    ax.legend()
    ax.grid(True)
    st.pyplot(fig)
